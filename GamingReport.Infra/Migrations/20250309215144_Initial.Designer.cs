// <auto-generated />
using GamingReport.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamingReport.Infra.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250309215144_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("GamingReport.Core.Reviews.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DownPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Score")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UpPoints")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = "7d98a023-dc95-4496-91d8-10da9d708fe3",
                            Content = "Content for Review One",
                            DownPoints = 2,
                            GameId = "56af6d7c-dc58-44ce-95b8-58b11ccedbc7",
                            Score = 8.5m,
                            Title = "Review One",
                            UpPoints = 10
                        },
                        new
                        {
                            Id = "10a9521d-fdeb-4ebd-ab05-c6a980a65f88",
                            Content = "Content for Review Two",
                            DownPoints = 1,
                            GameId = "dbb0f2e5-5f2b-474d-8cec-ebef7e9b14fb",
                            Score = 9.0m,
                            Title = "Review Two",
                            UpPoints = 15
                        });
                });

            modelBuilder.Entity("GamingReport.Core._Developer.Developer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = "e1bdd499-bfc0-4f56-b6e0-5c33c6c60f59",
                            Name = "Developer One"
                        },
                        new
                        {
                            Id = "b9c3b167-ece2-4736-aadd-b89d82c4208c",
                            Name = "Developer Two"
                        });
                });

            modelBuilder.Entity("GamingReport.Core._Game.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeveloperId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = "56af6d7c-dc58-44ce-95b8-58b11ccedbc7",
                            Description = "Description for Game One",
                            DeveloperId = "e1bdd499-bfc0-4f56-b6e0-5c33c6c60f59",
                            Name = "Game One",
                            Platform = "[0,2]"
                        },
                        new
                        {
                            Id = "dbb0f2e5-5f2b-474d-8cec-ebef7e9b14fb",
                            Description = "Description for Game Two",
                            DeveloperId = "b9c3b167-ece2-4736-aadd-b89d82c4208c",
                            Name = "Game Two",
                            Platform = "[1,3]"
                        });
                });

            modelBuilder.Entity("GamingReport.Core.Reviews.Review", b =>
                {
                    b.HasOne("GamingReport.Core._Game.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GamingReport.Core._Game.Game", b =>
                {
                    b.HasOne("GamingReport.Core._Developer.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("GamingReport.Core._Developer.Developer", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
