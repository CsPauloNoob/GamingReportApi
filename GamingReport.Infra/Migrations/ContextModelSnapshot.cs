// <auto-generated />
using System;
using GamingReport.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamingReport.Infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("GamingReport.Core.Reviews.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DownPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GamePlatform")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Score")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UpPoints")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = "6cf306d3-aa7c-498f-b84a-5f72d148e7fb",
                            Content = "Content for Review One",
                            CreatedAt = new DateTime(2025, 3, 23, 18, 51, 18, 649, DateTimeKind.Local).AddTicks(3223),
                            DownPoints = 2,
                            GameId = "da6e8206-b0c4-46cc-a2ba-26d0681b4a2c",
                            GamePlatform = 0,
                            Score = 8.5m,
                            Title = "Review One",
                            UpPoints = 10
                        },
                        new
                        {
                            Id = "72a1728a-d172-44c8-967c-58745268f0b9",
                            Content = "Content for Review Two",
                            CreatedAt = new DateTime(2025, 3, 23, 18, 51, 18, 649, DateTimeKind.Local).AddTicks(3235),
                            DownPoints = 1,
                            GameId = "e0a62d44-8293-4cdc-86f0-eca8bbea2493",
                            GamePlatform = 0,
                            Score = 9.0m,
                            Title = "Review Two",
                            UpPoints = 15
                        });
                });

            modelBuilder.Entity("GamingReport.Core._Developer.Developer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = "d973f564-472b-49b0-bd5f-0c71da721886",
                            Name = "Developer One"
                        },
                        new
                        {
                            Id = "27835279-e7d2-40e7-9e6d-184d4d57040d",
                            Name = "Developer Two"
                        });
                });

            modelBuilder.Entity("GamingReport.Core._Game.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeveloperId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SteamGameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = "da6e8206-b0c4-46cc-a2ba-26d0681b4a2c",
                            Description = "Description for Game One",
                            DeveloperId = "d973f564-472b-49b0-bd5f-0c71da721886",
                            Name = "Game One",
                            Platform = "[0,2]",
                            SteamGameId = 0
                        },
                        new
                        {
                            Id = "e0a62d44-8293-4cdc-86f0-eca8bbea2493",
                            Description = "Description for Game Two",
                            DeveloperId = "27835279-e7d2-40e7-9e6d-184d4d57040d",
                            Name = "Game Two",
                            Platform = "[1,3]",
                            SteamGameId = 0
                        });
                });

            modelBuilder.Entity("GamingReport.Core.Reviews.Review", b =>
                {
                    b.HasOne("GamingReport.Core._Game.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GamingReport.Core._Game.Game", b =>
                {
                    b.HasOne("GamingReport.Core._Developer.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("GamingReport.Core._Developer.Developer", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
